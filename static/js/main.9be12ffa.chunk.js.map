{"version":3,"sources":["api/api.ts","components/ArticleCard/ArticleCard.tsx","components/ArticleList/ArticleList.tsx","App.tsx","index.tsx"],"names":["apiKey","ArticleCard","article","urlToImage","publishedAt","description","source","className","src","alt","name","slice","ArticleList","articles","map","i","App","useState","setArticles","articlesEnded","setArticlesEnded","page","setPage","isLoading","setIsLoading","error","setError","inputText","setInputText","useEffect","axios","get","then","data","Error","fetchDataFromApi","length","prevArticles","catch","finally","visibleArticles","filter","toLowerCase","includes","type","placeholder","onChange","e","currentTarget","value","onClick","prevPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAIMA,EAAS,mC,qBCIFC,EAA+B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE3CC,EAIED,EAJFC,WACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,OAGF,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKL,EAAYM,IAAI,SAC1B,sBAAKF,UAAU,iBAAf,UACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAOI,MAAQ,YAC1C,mBAAGH,UAAU,aAAb,SAA2BH,EAAYO,MAAM,GAAI,SAEnD,mBAAGJ,UAAU,aAAb,SAA2BF,GAAe,uBCfnCO,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7C,OACE,qBAAKN,UAAU,UAAf,SACGM,EAASC,KAAI,SAACZ,EAASa,GAAV,OAEZ,aADF,CACG,EAAD,CAAqBb,QAASA,GAAZa,SCPbC,EAAgB,WAC3B,MAAgCC,mBAAwB,IAAxD,mBAAOJ,EAAP,KAAiBK,EAAjB,KACA,EAA0CD,oBAAS,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAAwBH,mBAAS,GAAjC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAA0BP,oBAAS,GAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KACA,EAAkCT,mBAAS,IAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WAEFV,GHVsB,WAAe,IAAdE,EAAa,uDAAN,EACtC,OAAOS,IAAMC,IAAN,+DAAkEV,EAAlE,qBALQ,GAKR,mBAAsGrB,IAC1GgC,MAAK,SAAAC,GACJ,IAAKA,EACH,MAAM,IAAIC,MAGZ,OAAOD,EAAKA,KAAKpB,YGOjBsB,CAAiBd,GACdW,MAAK,SAACC,GACDA,EAAKG,OAAS,IAChBhB,GAAiB,GAGnBF,GAAY,SAACmB,GAAD,4BAAsBA,GAAtB,YAAuCJ,UAEpDK,OAAM,WACLZ,GAAS,GACTN,GAAiB,MAElBmB,SAAQ,WACPf,GAAa,QAKlB,CAACH,IAEJ,IASMmB,EAAkB3B,EAAS4B,QAAO,SAAAvC,GAAO,OAC7CA,EAAQI,OAAOI,KAAKgC,cAAcC,SAAShB,EAAUe,kBAGvD,OACE,sBAAKnC,UAAU,YAAf,UACE,uBACEqC,KAAK,OACLC,YAAY,iBACZC,SAbW,SAACC,GAChBnB,EAAamB,EAAEC,cAAcC,QAazBA,MAAOtB,IAGT,cAAC,EAAD,CAAad,SAAU2B,IAEtBf,GAAS,SACRN,IAAkBI,GAClB,wBAAQqB,KAAK,SAASM,QA1BX,WACf5B,GAAQ,SAAC6B,GAAD,OAAcA,EAAW,KACjC3B,GAAa,IAwBT,2BC7DR4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9be12ffa.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst pageSize = 10;\n// const apiKey = '99c94c4706bc4b3a84a73e98c1c9442f';\nconst apiKey = 'c6786256472e4801a0977ddc36798a2a';\n\nexport const fetchDataFromApi = (page = 1) => {\n  return axios.get(`https://newsapi.org/v2/top-headlines?country=ua&page=${page}&pageSize=${pageSize}&apiKey=${apiKey}`)\n    .then(data => {\n      if (!data) {\n        throw new Error();\n      }\n\n      return data.data.articles;\n    });\n};\n","import React from 'react';\nimport { ArticleType } from '../../types/ArticleType';\nimport './style.scss';\n\ntype Props = {\n  article: ArticleType,\n};\n\nexport const ArticleCard: React.FC<Props> = ({ article }) => {\n  const {\n    urlToImage,\n    publishedAt,\n    description,\n    source,\n  } = article;\n\n  return (\n    <div className=\"card\">\n      <img src={urlToImage} alt=\"card\" />\n      <div className=\"card__subtitle\">\n        <p className=\"card__name\">{source.name || 'no name'}</p>\n        <p className=\"card__date\">{publishedAt.slice(0, -10)}</p>\n      </div>\n      <p className=\"card__desc\">{description || 'no description'}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ArticleType } from '../../types/ArticleType';\nimport { ArticleCard } from '../ArticleCard';\n\ntype Props = {\n  articles: ArticleType[],\n};\n\nexport const ArticleList: React.FC<Props> = ({ articles }) => {\n  return (\n    <div className=\"wrapper\">\n      {articles.map((article, i) => (\n      // eslint-disable-next-line react/no-array-index-key\n        <ArticleCard key={i} article={article} />))}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { fetchDataFromApi } from './api/api';\nimport './App.scss';\nimport { ArticleType } from './types/ArticleType';\nimport { ArticleList } from './components/ArticleList';\n\nexport const App: React.FC = () => {\n  const [articles, setArticles] = useState<ArticleType[]>([]);\n  const [articlesEnded, setArticlesEnded] = useState(false);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [inputText, setInputText] = useState('');\n\n  useEffect(() => {\n    const fetchData = () => {\n      if (articlesEnded) {\n        return;\n      }\n\n      fetchDataFromApi(page)\n        .then((data) => {\n          if (data.length < 10) {\n            setArticlesEnded(true);\n          }\n\n          setArticles((prevArticles) => [...prevArticles, ...data]);\n        })\n        .catch(() => {\n          setError(true);\n          setArticlesEnded(true);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    };\n\n    fetchData();\n  }, [page]);\n\n  const loadMore = () => {\n    setPage((prevPage) => prevPage + 1);\n    setIsLoading(true);\n  };\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    setInputText(e.currentTarget.value);\n  };\n\n  const visibleArticles = articles.filter(article => (\n    article.source.name.toLowerCase().includes(inputText.toLowerCase())\n  ));\n\n  return (\n    <div className=\"container\">\n      <input\n        type=\"text\"\n        placeholder=\"Search by name\"\n        onChange={onChange}\n        value={inputText}\n      />\n\n      <ArticleList articles={visibleArticles} />\n\n      {error && 'error'}\n      {!articlesEnded && !isLoading && (\n        <button type=\"button\" onClick={loadMore}>Load more</button>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}